# Nome da nossa pipeline
name: Backend CI Pipeline

# Evento que dispara a pipeline
# Ela vai rodar a cada 'pull request' para a branch 'main'
# e também a cada 'push' (o que acontece depois de um merge) na 'main'.
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

# Definição dos 'jobs' (tarefas) que a pipeline vai executar.
jobs:
  build_and_test:
    # O tipo de máquina virtual que o GitHub Actions vai usar.
    runs-on: ubuntu-latest

    # Os passos que o 'job' vai seguir.
    steps:
      # Passo 1: Clona o código do seu repositório para a máquina virtual.
      - name: Checkout code
        uses: actions/checkout@v4

      # Passo 2: Configura o ambiente Python.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Verifique a versão que seu projeto usa

      # Passo 3: Instala as dependências do projeto.
      # É crucial ter um arquivo 'requirements.txt' na sua pasta backend.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          
      # Passo 4: Executa os testes.
      # Substitua 'pytest' pelo comando que você usa para rodar os testes.
      - name: Run tests
        run: |
          cd backend
          pytest
